# This is a basic workflow to help you get started with Actions

name: gh-action-build-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      -  'main'
      -  'develop'
  pull_request:
    branches:
      -  'main'
      -  'develop'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up JDK v17
        uses: actions/setup-java@v3.4.1
        with:
          java-version: '17'
          distribution: adopt

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install ffmpeg for yt-dlp
        run: sudo apt install update & sudo apt install -y ffmpeg
      - name: setup pip requirements for Python Application
        working-directory: videoDownloader
        run: pip install -r requirements.txt

      - name: print ffmpeg version
        run: ffmpeg -version

      - name: Maven Cache
        uses: skjolber/maven-cache-github-action@v1.1
        with:
          step: restore

      - name: extract version for pom.xml
        working-directory: makeYouShorts
        run: echo "VERSION=$(grep -oPm2 "(?<=<version>)[^<]+" pom.xml | sed -n 2p)" >> $GITHUB_ENV

      - name: Spring Boot Build with Maven
        working-directory: makeYouShorts
        run: mvn compile --batch-mode --update-snapshots verify

      - name: Maven Cache
        uses: skjolber/maven-cache-github-action@v1.1
        with:
          step: save

      - name: Pytest python application in videoDownloader
        working-directory: videoDownloader
        run: pytest --junit-xml=test/result.xml

      - name: Current Time
        uses: gerred/current-time@v1.0.0
        id: current-time

      - name: get current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
        run: echo $TIME

      - name: Publish Test Results on Pull Request
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files:
            makeYouShorts/target/surefire-reports/**/*.xml
            videoDownloader/test/*.xml

